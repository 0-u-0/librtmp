CROSS_COMPILE=arm-angstrom-linux-gnueabi-
CC=$(CROSS_COMPILE)gcc -mcpu=cortex-a8
CXX=$(CROSS_COMPILE)g++ -mcpu=cortex-a8
LD=$(CROSS_COMPILE)ld

OPT=-O2
STAGING=/home/hyc/oe/tmp/staging/armv7a-angstrom-linux-gnueabi
CFLAGS=-Wall -I$(STAGING)/usr/include $(OPT)
CXXFLAGS=-Wall -I$(STAGING)/usr/include $(OPT)
LDFLAGS=-Wall -L$(STAGING)/usr/lib

all: rtmpdump

clean:
	rm -f *.o

streams: bytes.o log.o rtmp.o AMFObject.o rtmppacket.o streams.o parseurl.o dh.o handshake.o
	$(CXX) $(LDFLAGS) $(ARMFLAGS) $^ -o $@_arm -lpthread -lcrypto

rtmpdump: bytes.o log.o rtmp.o AMFObject.o rtmppacket.o rtmpdump.o parseurl.o dh.o handshake.o
	$(CXX) $(LDFLAGS) $(ARMFLAGS) $^ -o $@_arm -lcrypto

bytes.o: bytes.c bytes.h Makefile
log.o: log.c log.h Makefile
rtmp.o: rtmp.cpp rtmp.h log.h AMFObject.h Makefile
AMFObject.o: AMFObject.cpp AMFObject.h log.h rtmp.h Makefile
rtmppacket.o: rtmppacket.cpp rtmppacket.h log.h Makefile
rtmpdump.o: rtmpdump.cpp rtmp.h log.h AMFObject.h Makefile
parseurl.o: parseurl.c parseurl.h log.h Makefile
streams.o: streams.cpp log.h Makefile
dh.o: dh.c dh.h log.h Makefile
handshake.o: handshake.cpp log.h Makefile

